name: CI

on:
  pull_request:
    branches:
      - main

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
  IP_ADDRESS_SALT: ${{ secrets.IP_ADDRESS_SALT }}
  BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: pnpm test:unit

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build MDX
        run: pnpm build:mdx

      - name: Run ESLint
        run: pnpm lint

  types:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Generate Next.js route types
        run: pnpm --filter web typegen

      - name: Build MDX
        run: pnpm build:mdx

      - name: Run type check
        run: pnpm type-check

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run Prettier format check
        run: pnpm format:check

  spelling:
    name: Spelling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run spelling check
        run: pnpm check:spelling

  knip:
    name: Knip
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build MDX
        run: pnpm build:mdx

      - name: Run Knip
        run: pnpm check:knip

  e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [tests, eslint, types]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Create test posts
        run: |
          mkdir -p apps/web/src/content/blog/en/

          frontmatter() {
            cat << EOF
          ---
          title: $1
          date: '2000-01-01T00:00:00Z'
          modifiedTime: '2000-01-01T00:00:00Z'
          summary: This is a test post.
          ---

          # $1

          This is a test post.
          EOF
          }

          # Create posts
          frontmatter "Test Submit Comment" > apps/web/src/content/blog/en/test-submit.mdx
          frontmatter "Test Delete Comment" > apps/web/src/content/blog/en/test-delete.mdx
          frontmatter "Test Reply Comment" > apps/web/src/content/blog/en/test-reply.mdx
          frontmatter "Test Delete Reply" > apps/web/src/content/blog/en/test-delete-reply.mdx
          frontmatter "Test View Post" > apps/web/src/content/blog/en/test-view.mdx
          frontmatter "Test Like Post" > apps/web/src/content/blog/en/test-like.mdx

      - name: Setup Playwright
        run: pnpm playwright install --with-deps

      - name: Run services
        run: docker compose up -d

      - name: Migrate database
        run: pnpm run db:migrate

      - name: Seed database
        run: pnpm run db:seed

      - name: Run Playwright tests
        run: pnpm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
